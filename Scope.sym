. = {
  .package() = {
    .file(examples/Overloaded.java) = {
      .A = {
        .method(toString)() = {
          .block(0) = {
          };
        };
      };
      .B = {
        .method(toString)() = {
          .block(1) = {
          };
        };
      };
      .C = {
        .method(toString)() = {
          .block(2) = {
          };
        };
      };
      .Overloaded = {
        .method(m)() = {
          .block(3) = {
          };
        };
        .method(m)(A a) = {
          a = param(alias(A), a);
          .block(11) = {
          };
        };
        .method(m)(A a1, A a2) = {
          a1 = param(alias(A), a1);
          a2 = param(alias(A), a2);
          .block(13) = {
          };
        };
        .method(m)(A a1, B b2) = {
          a1 = param(alias(A), a1);
          b2 = param(alias(B), b2);
          .block(14) = {
          };
        };
        .method(m)(B b) = {
          b = param(alias(B), b);
          .block(12) = {
          };
        };
        .method(m)(B b1, A a2) = {
          a2 = param(alias(A), a2);
          b1 = param(alias(B), b1);
          .block(15) = {
          };
        };
        .method(m)(C c1, C c2) = {
          c1 = param(alias(C), c1);
          c2 = param(alias(C), c2);
          .block(16) = {
          };
        };
        .method(m)(Integer i) = {
          i = param(alias(Integer), i);
          .block(8) = {
          };
        };
        .method(m)(Object o) = {
          o = param(alias(Object), o);
          .block(9) = {
          };
        };
        .method(m)(String s) = {
          s = param(alias(String), s);
          .block(10) = {
          };
        };
        .method(m)(byte b) = {
          b = param(byte, b);
          .block(4) = {
          };
        };
        .method(m)(int i) = {
          i = param(int, i);
          .block(6) = {
          };
        };
        .method(m)(long l) = {
          l = param(long, l);
          .block(7) = {
          };
        };
        .method(m)(short s) = {
          s = param(short, s);
          .block(5) = {
          };
        };
        .method(main)(String[] args) = {
          args = param(array(annotated(alias(String)), *), args);
          .block(17) = {
            a = local(alias(A), a);
            b = local(alias(B), b);
            c = local(alias(C), c);
            n1 = local(byte, n1);
            n2 = local(byte, n2);
            o = local(alias(Overloaded), o);
          };
        };
      };
    };
  };
};
